function getTypeFromUrl(e){let t=/\.[^\.]+$/.exec(e)[0];return".js"===t?"text/javascript":".css"===t?"text/css":void 0}function formatFileList(e){let t;if("string"==typeof e)t=[e];else if(Array.isArray(e))t=e;else throw{error:"The dynamicFile parameter must be a string or an array"};let r;return t.map(e=>{let t,r;if("string"==typeof e)r=getTypeFromUrl(t=e);else if(Array.isArray(e))[t]=e,r=e[1]&&e[1].type?e[1].type:getTypeFromUrl(t);else throw{error:"The dynamicFile parameter must be a string or an array"};return{url:t,type:r}})}function createElement({type:e,url:t,...r}){switch(e){case"text/javascript":{let a=document.createElement("script");return a.setAttribute("type","text/javascript"),a.src=t,a}case"text/css":{let l=document.createElement("link");return l.href=t,l.setAttribute("rel","stylesheet"),l.setAttribute("media","all"),l.setAttribute("type","text/css"),l}}}let loadElement=e=>new Promise(t=>{let r=document.getElementsByTagName("head")[0];r.appendChild(e),e.readyState?e.onreadystatechange=()=>{("loaded"===e.readyState||"complete"===e.readyState)&&(e.onreadystatechange=null,t())}:e.onload=t});async function dynamicFile(e,t){try{let r=formatFileList(e),a=r.map(createElement);await Promise.all(a.map(e=>loadElement(e)))}catch(l){console.log(l)}}
