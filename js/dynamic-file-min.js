function getTypeFromUrl(e){const t=/\.[^\.]+$/.exec(e)[0];return".js"===t?"text/javascript":".css"===t?"text/css":void 0}function formatFileList(e){let t,r;if("string"==typeof e)t=[e];else{if(!Array.isArray(e)){throw{error:"The dynamicFile parameter must be a string or an array"}}t=e}return r=t.map((e=>{let t,r;if("string"==typeof e)t=e,r=getTypeFromUrl(t);else{if(!Array.isArray(e)){throw{error:"The dynamicFile parameter must be a string or an array"}}[t]=e,r=e[1]&&e[1].type?e[1].type:getTypeFromUrl(t)}return{url:t,type:r}})),r}function createElement({type:e,url:t,...r}){switch(e){case"text/javascript":{const e=document.createElement("script");return e.setAttribute("type","text/javascript"),e.src=t,e}case"text/css":{const e=document.createElement("link");return e.href=t,e.setAttribute("rel","stylesheet"),e.setAttribute("media","all"),e.setAttribute("type","text/css"),e}}}const loadElement=e=>new Promise((t=>{document.getElementsByTagName("head")[0].appendChild(e),e.readyState?e.onreadystatechange=()=>{"loaded"!==e.readyState&&"complete"!==e.readyState||(e.onreadystatechange=null,t())}:e.onload=t}));async function dynamicFile(e,t){try{const t=formatFileList(e).map(createElement);await Promise.all(t.map((e=>{return t=e,new Promise((e=>{document.getElementsByTagName("head")[0].appendChild(t),t.readyState?t.onreadystatechange=()=>{"loaded"!==t.readyState&&"complete"!==t.readyState||(t.onreadystatechange=null,e())}:t.onload=e}));var t})))}catch(e){console.log(e)}}
